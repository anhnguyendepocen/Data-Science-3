qplot(x = tenure, data = pf,
color = I("black"), fill = I("#099099"))
qplot(x = tenure, data = pf, binwidth = 30,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth=.05
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= 0.05,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= 0.5,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= 0.25,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= 0.2,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= 0.1,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= 1,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#099099"))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#099099"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#094099"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#09AF99"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#99AF99"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#69AF99"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(tenure/365, data=pf, binwidth= .25,
color = I("black"), fill = I("#69AFD9"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(tenure/365, data=pf, binwidth= .25,
xlab = "Number of years using Facebook",
ylab = "Number of users in sample",
color = I("black"), fill = I("#69AFD9"))+
scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(x = age, data=pf)
qplot(x = age, data=pf,
color = I("black"), fill = I("#69AFD9")))
qplot(x = age, data=pf,
color = I("black"), fill = I("#69AFD9"))
qplot(x = age, data=pf,
xlab = "Age of Facebook users",
ylab = "Number of users in sample",
color = I("black"), fill = I("#69AFD9"))
qplot(x = age, data=pf, binwidth = 10
xlab = "Age of Facebook users",
qplot(x = age, data=pf, binwidth = 10,
xlab = "Age of Facebook users",
ylab = "Number of users in sample",
color = I("black"), fill = I("#69AFD9"))
qplot(x = age, data=pf, binwidth = 5,
xlab = "Age of Facebook users",
ylab = "Number of users in sample",
color = I("black"), fill = I("#69AFD9"))
qplot(x = age, data=pf, binwidth = 5,
xlab = "Age of Facebook users",
ylab = "Number of users in sample",
color = I("black"), fill = I("#69AFD9")) +
scale_x_continuous(breaks = seq(0,120,5))
qplot(x = age, data=pf, binwidth = 1,
xlab = "Age of Facebook users",
ylab = "Number of users in sample",
color = I("black"), fill = I("#69AFD9")) +
scale_x_continuous(breaks = seq(0,120,5))
qplot(x=friend_count, data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count +1))
summary(sqrt(pf$friend_count))
qplot(x=friend_count, data=pf)
summary(pf$friend_count)
summary(log10(pf$friend_count +1))
summary(sqrt(pf$friend_count))
install.packages('gridExtra')
library(gridExtra)
p2 = qplot(x=log10(pf$friend_count +1), data=pf)
p2
p3 = qplot(x=sqrt(pf$friend_count), data=pf)
p3
grid.arrange(p1,p2,p3)
library(gridExtra)
p1 = qplot(x=friend_count, data=pf)
p2 = qplot(x=log10(pf$friend_count +1), data=pf)
p3 = qplot(x=sqrt(pf$friend_count), data=pf)
grid.arrange(p1,p2,p3)
library(gridExtra)
p1 <-  qplot(x=friend_count, data=pf)
p2 <-  qplot(x=log10(pf$friend_count + 1), data=pf)
p3 <-  qplot(x=sqrt(pf$friend_count), data=pf)
grid.arrange(p1,p2,p3, ncol=1)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count,y = ..count../sum(..count..), data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes ,y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender)
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender)
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(lim = c(0, 500), breaks = seq(0, 500, 50))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(lim = c(0, 10), breaks = seq(0, 100,10))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(lim = c(0, 100), breaks = seq(0, 100,10))
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous() +
scale_x_log10()
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
geom = "freqpoly", color = gender) +
scale_x_continuous() +
scale_x_log10()
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y = friend_count, data = subset((pf, !is.na(gender)), geom = "boxplot"))
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)), geom = "boxplot"))
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)), geom = "boxplot")
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
scale_y_continuous(limits = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot", ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot")
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot", ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,250))
by(pf$friend_count, pf$gender, sum)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,250))
by(pf$friend_count, pf$gender, sum)
by(pf$friend_count, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,250))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,500))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(150,500))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = "boxplot") +
coord_cartesian(ylim = c(0,150))
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_check_in <-  NA
pf$mobile_check_in <- ifelse(p$mobile_likes > 0, 1, 0)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_check_in <-  NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in ==1) / length(pf$mobile_check_in)
diamonds
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data("diamonds")
summary(diamonds)
diamonds$color
?diamonds
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds, binwidth = 10)
qplot(x = price, data = diamonds, binwidth = 20)
qplot(x = price, data = diamonds, binwidth = 50)
qplot(x = price, data = diamonds, binwidth = 50) +
scale_x_log10()
qplot(x = price, data = diamonds, binwidth = 100)
qplot(x = price, data = diamonds, binwidth = 500)
table(diamonds$price)
summary(diamonds$price)
qplot(x = price, data = diamonds, binwidth = 500)
summary(diamonds$price)
length(diamonds$price <500)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
qplot(x = price, data = diamonds, binwidth = 500, title( = "Diamond Price Distribution",
qplot(x = price, data = diamonds, binwidth = 500, title = "Diamond Price Distribution",
xlab("Diamond Price USD"), ylab = "Frequency"))
qplot(x = price, data = diamonds, binwidth = 500, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")
mean(diamonds$price)
median(diamonds$price)
qplot(x = price, data = diamonds, binwidth = 500, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous()
qplot(x = price, data = diamonds, binwidth = 500, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,5000))
qplot(x = price, data = diamonds, binwidth = 100, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,5000))
qplot(x = price, data = diamonds, binwidth = 100, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
coord_cartesian(ylim = c(0,1000))
scale_x_continuous(limits = c(0,2500)
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
qplot(x = price, data = diamonds, binwidth = 100, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,500))
qplot(x = price, data = diamonds, binwidth = 100, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
ggsave('priceHistogram.png')
qplot(x = price, data = diamonds, binwidth = 100, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 25, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 1, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 10, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds, binwidth = 10, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut)
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut)
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut) +
theme_minimal()
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut)
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution By Cut",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, min)
by(diamonds$price, diamonds$cut, median)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
?facet_wrap
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution By Cut",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut, scales = "free_y")
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution By Cut",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous(limits = c(0,2500))   +
facet_wrap(~cut, scales = "free_y")
qplot(x = price, data = diamonds, binwidth = 50, title = "Diamond Price Distribution By Cut",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous()   +
facet_wrap(~cut, scales = "free_y")
qplot(x = price, data = diamonds, binwidth = 100, title = "Diamond Price Distribution By Cut",
xlab ="Diamond Price USD", ylab = "Frequency")  +
scale_x_continuous()   +
facet_wrap(~cut, scales = "free_y")
View(diamonds)
qplot(x = price/carat, data= diamonds) +
facet_wrap(~cut)
qplot(x = price/carat, data= diamonds, binwidth = 100) +
facet_wrap(~cut)
qplot(x = price/carat, data= diamonds, binwidth = 100) +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = 100) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = 1) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = .1) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = .01) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = .05) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = .02) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price/carat, data= diamonds, binwidth = .01) +
scale_x_log10() +
facet_wrap(~cut, scales="free")
qplot(x = price, y = cut, data = diamonds,
geom = "boxplot")
qplot(x = cut, y = price, data = diamonds,
geom = "boxplot")
qplot(x = cut, y = price, data = diamonds, title = "Diamond Price by Cut", xlab ="Cut of Diamond", ylab = "Diamond Price USD", geom = "boxplot")
qplot(x = clarity, y = price, data = diamonds, title = "Diamond Price by Clarity", xlab ="Clarity of Diamond", ylab = "Diamond Price USD", geom = "boxplot")
qplot(x = clarity, y = price, data = diamonds, title = "Diamond Price by Clarity",
xlab ="Clarity of Diamond", ylab = "Diamond Price USD", geom = "boxplot") +
scale_y_continuous(limits = c(0, 10000))
summary(diamonds$color)
summary(subset(diamonds, color == 'D')$color)
summary(subset(diamonds, diamonds$color == 'D')$color)
d = subset(diamonds, diamonds$color == 'D')$color
summary(d)
d = subset(diamonds, diamonds$color == 'D')
summary(d)
summary(subset(diamonds, diamonds$color == 'D'))
summary(subset(diamonds, diamonds$color == 'D'))
summary(subset(diamonds, diamonds$color == 'J'))
IQR(subset(diamonds, diamonds$color == 'J')$price)
IQR(subset(diamonds, diamonds$color == 'D')$price)
qplot(x = color, y = price/carat, data = diamonds, title = "Diamond Price/Carat by Diamond Color",
xlab ="Clarity of Diamond", ylab = "Diamond Price/Carat USD", geom = "boxplot")
qplot(x = color, y = price/carat, data = diamonds, title = "Diamond Price/Carat by Diamond Color",
xlab ="Clarity of Diamond", ylab = "Diamond Price/Carat USD", geom = "boxplot")
ggsave('pricepercaratBoxplot.png')
qplot(x = carat, data = diamonds, geom = "freqpoly")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = 20)
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = 10)
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = 30)
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = 1)
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .1)
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .05)
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .05 +
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .05,
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .025,
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .05,
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .025,
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .01,
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency")
qplot(x = carat, data = diamonds, geom = "freqpoly", binwidth = .01,
title = "Diamond Freq by Carat", xlab = "Carat", ylab = "Diamond Frequency") +
scale_x_continuous(limits = c(0, 1.2))
getwd()
setwd("C:\Users\dsilv\Desktop\Learning\Data Science\Data-Science\Data Analysis with R - Udacity")
setwd("C:/Users/dsilv/Desktop/Learning/Data Science/Data-Science/Data Analysis with R - Udacity")
getwd()
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
qplot(age, friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point()
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/10) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/30) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
?coord_trans?
?coord_trans
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt") +
xlim(13, 90) + ylim(1,)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt") +
xlim(13, 90) + ylim(-1,100000)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point()
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter()
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(height = 0)) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/30, position = position_jitter(height = 0)) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/30, position = position_jitter(height = 0)) +
coord_trans(y = "sqrt") +
xlim(13,90)
library("dplyr")
library("dplyr")
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age)
head(pf.fc_by_age)
library("dplyr")
pf %>%
group_by(age) %>%
summarise( friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
library("dplyr")
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise( friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
head(pf.fc_by_age, 20)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count_median), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
glimpse(pf.fc_by_age)
